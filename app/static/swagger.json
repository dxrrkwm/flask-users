{
  "swagger": "2.0",
  "info": {
    "title": "Flask Test task",
    "description": "Users API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns a list of all users in the database",
        "responses": {
          "200": {
            "description": "A list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user in the database",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "User ID",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get a specific user",
        "description": "Returns a specific user by ID",
        "responses": {
          "200": {
            "description": "A single user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "description": "Updates a user's information",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Updated user information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Deletes a specific user by ID",
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "User ID"
        },
        "name": {
          "type": "string",
          "description": "User name"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User email"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        }
      }
    },
    "UserInput": {
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "User name"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User email"
        }
      }
    }
  }
} 